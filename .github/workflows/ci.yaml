name: Build and test

on: [push, pull_request]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 11, 17 ]
    name: Java ${{ matrix.java }} build
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven on JDK ${{ matrix.java }}
        run: mvn --batch-mode --update-snapshots verify

      - name: Get version
        run: |
          VERSION=$( mvn help:evaluate -Dexpression=project.version -q -DforceStdout )
          echo "::set-output name=version::$VERSION"
        id: project

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      #Build a local docker image
      - name: Build local container image
        run: mvn jib:dockerBuild -Dimage=jdbc-inquirer:local

      #Run scan on local docker image, ensure not critical, high
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        id: aquasec
        with:
          image-ref: jdbc-inquirer:local
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      #Build tag the image and push
      - name: Build and upload the ghcr image
        run: |
        docker tag jdbc-inquirer:local ${{ env.REGISTRY }}/${{ env.github.repository }}:${{ steps.project.outputs.version }}
        docker push ${{ env.REGISTRY }}/${{ env.github.repository }}:${{ steps.project.outputs.version }}